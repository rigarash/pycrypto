# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- azure-pipelines

jobs:
- job: build
  pool:
    vmImage: 'windows-2019'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'
  - script: |
      pip install --upgrade pip setuptools wheel twine keyring artifacts-keyring
      set VCINSTALLDIR="C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC"
      set CL=-FI"%VCINSTALLDIR%Tools\MSVC\14.23.28105\INCLUDE\stdint.h"
      pip wheel .
    displayName: 'build wheel'
  # - task: TwineAuthenticate@1
  #   inputs:
  #    artifactFeeds: 'rigarash'
  #   displayName: 'Configure twine authentication'
  # - script: twine upload -r rigarash --config-file $(PYPIRC_PATH) dist/*
  #   displayName: 'Publish project artifacts'
  # - task: PowerShell@2
  #   inputs:
  #     targetType: 'inline'
  #     script: |
  #       pip install daz pytest pytest-azurepipelines
  #       pytest
  #   displayName: 'pytest'
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Pipeline.Workspace)/s/dist'
      #artifactName: # 'drop'
    displayName: 'Publish build artifacts'
